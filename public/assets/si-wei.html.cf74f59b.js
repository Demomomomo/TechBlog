import{_ as t}from"./_plugin-vue_export-helper.cdc0426e.js";import{o as e,c as o,a as n,e as s,f as p,d as c,r as l}from"./app.e147a21b.js";const i={},r=n("h2",{id:"整除光棍",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#整除光棍","aria-hidden":"true"},"#"),s(" 整除光棍")],-1),u=n("br",null,null,-1),k={href:"https://pintia.cn/problem-sets/1639924117484503040/exam/problems/1639924223701057546",target:"_blank",rel:"noopener noreferrer"},d=n("br",null,null,-1),v=n("br",null,null,-1),m=n("br",null,null,-1),b=n("br",null,null,-1),_=n("br",null,null,-1),h=c(`<div class="language-cpp line-numbers-mode" data-ext="cpp"><pre class="language-cpp"><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;bits/stdc++.h&gt;</span></span>
<span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">int</span> <span class="token expression"><span class="token keyword">long</span> <span class="token keyword">long</span></span></span>
<span class="token keyword">int</span> n<span class="token punctuation">;</span>
<span class="token keyword">signed</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">int</span> con<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
	cin<span class="token operator">&gt;&gt;</span>n<span class="token punctuation">;</span>
	<span class="token keyword">bool</span> f<span class="token operator">=</span><span class="token boolean">false</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> i<span class="token punctuation">;</span>
	<span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
		con<span class="token operator">=</span>con<span class="token operator">*</span><span class="token number">10</span><span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>con<span class="token operator">&gt;=</span>n<span class="token punctuation">)</span><span class="token punctuation">{</span>
			<span class="token keyword">int</span> op<span class="token operator">=</span>con<span class="token operator">/</span>n<span class="token punctuation">;</span>
			cout<span class="token operator">&lt;&lt;</span>op<span class="token punctuation">;</span>
			con<span class="token operator">-=</span>op<span class="token operator">*</span>n<span class="token punctuation">;</span>
			f<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span>
		<span class="token punctuation">}</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span> cout<span class="token operator">&lt;&lt;</span><span class="token number">0</span><span class="token punctuation">;</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>con<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">break</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>
	
	cout<span class="token operator">&lt;&lt;</span><span class="token string">&quot; &quot;</span><span class="token operator">&lt;&lt;</span>i<span class="token punctuation">;</span>
	<span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function f(y,w){const a=l("ExternalLinkIcon");return e(),o("div",null,[r,n("p",null,[s("原题链接："),u,n("a",k,[s("https://pintia.cn/problem-sets/1639924117484503040/exam/problems/1639924223701057546"),p(a)]),d,s(" 题意："),v,s(" 给定一个个位数不是5的奇数n，请你找出一个数最小的数x使得x*n的结果是所有位数都是1的数，保证一定有解。输出x和x的位数"),m,s(" 思路："),b,s(" 我们可以模拟一下都是1组成的数整除n的过程。"),_,s(" 即设一个数con刚开始为0，当con%n！=0的时候，我们将他乘10+1，这样每次都使得他是所有位数都是1的数。那么我们再比较con和n的大小，如果比n大说明可以除以n，那么我们就输出con/n，如果小的话我们输出0.")]),h])}const N=t(i,[["render",f],["__file","si-wei.html.vue"]]);export{N as default};
