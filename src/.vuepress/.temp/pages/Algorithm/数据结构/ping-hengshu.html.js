export const data = JSON.parse("{\"key\":\"v-16d0f86f\",\"path\":\"/algorithm/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ping-hengshu.html\",\"title\":\"平衡树\",\"lang\":\"zh-CN\",\"frontmatter\":{\"title\":\"平衡树\",\"description\":\"BST-二叉搜索树 每个结点都有一个权值，每一个结点都满足：他的左子树中任何一个点的权值严格小于当前结点的权值。他的右子树中任何一个点的权值严格大于当前结点的权值。 BST中一般没有重复的数，如果有的话在这个点上加一个计数器来记录这个点出现的次数。 BST的中序遍历一定是从大到小。 插入 从根结点开始递归，如果比根结点小的话就递归左子树。如果我们插入的...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://mister-hope.github.io/algorithm/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/ping-hengshu.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"Demo\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"平衡树\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"BST-二叉搜索树 每个结点都有一个权值，每一个结点都满足：他的左子树中任何一个点的权值严格小于当前结点的权值。他的右子树中任何一个点的权值严格大于当前结点的权值。 BST中一般没有重复的数，如果有的话在这个点上加一个计数器来记录这个点出现的次数。 BST的中序遍历一定是从大到小。 插入 从根结点开始递归，如果比根结点小的话就递归左子树。如果我们插入的...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}]]},\"excerpt\":\"\",\"headers\":[{\"level\":2,\"title\":\"BST-二叉搜索树\",\"slug\":\"bst-二叉搜索树\",\"link\":\"#bst-二叉搜索树\",\"children\":[{\"level\":3,\"title\":\"插入\",\"slug\":\"插入\",\"link\":\"#插入\",\"children\":[]},{\"level\":3,\"title\":\"删除\",\"slug\":\"删除\",\"link\":\"#删除\",\"children\":[]},{\"level\":3,\"title\":\"找最大最小值\",\"slug\":\"找最大最小值\",\"link\":\"#找最大最小值\",\"children\":[]},{\"level\":3,\"title\":\"找前驱/后继\",\"slug\":\"找前驱-后继\",\"link\":\"#找前驱-后继\",\"children\":[]}]},{\"level\":2,\"title\":\"treap\",\"slug\":\"treap\",\"link\":\"#treap\",\"children\":[]},{\"level\":2,\"title\":\"作用\",\"slug\":\"作用\",\"link\":\"#作用\",\"children\":[{\"level\":3,\"title\":\"结构\",\"slug\":\"结构\",\"link\":\"#结构\",\"children\":[]},{\"level\":3,\"title\":\"创建一个结点\",\"slug\":\"创建一个结点\",\"link\":\"#创建一个结点\",\"children\":[]},{\"level\":3,\"title\":\"向上传递信息更新父结点（pushup\",\"slug\":\"向上传递信息更新父结点-pushup\",\"link\":\"#向上传递信息更新父结点-pushup\",\"children\":[]},{\"level\":3,\"title\":\"初始化\",\"slug\":\"初始化\",\"link\":\"#初始化\",\"children\":[]},{\"level\":3,\"title\":\"左旋/右旋\",\"slug\":\"左旋-右旋\",\"link\":\"#左旋-右旋\",\"children\":[]},{\"level\":3,\"title\":\"插入一个数\",\"slug\":\"插入一个数\",\"link\":\"#插入一个数\",\"children\":[]},{\"level\":3,\"title\":\"删除一个数\",\"slug\":\"删除一个数\",\"link\":\"#删除一个数\",\"children\":[]},{\"level\":3,\"title\":\"求某一个值key的排名\",\"slug\":\"求某一个值key的排名\",\"link\":\"#求某一个值key的排名\",\"children\":[]},{\"level\":3,\"title\":\"求排名是rank的数值\",\"slug\":\"求排名是rank的数值\",\"link\":\"#求排名是rank的数值\",\"children\":[]},{\"level\":3,\"title\":\"求比某个数小的最大值\",\"slug\":\"求比某个数小的最大值\",\"link\":\"#求比某个数小的最大值\",\"children\":[]},{\"level\":3,\"title\":\"求比某个数大的最小值\",\"slug\":\"求比某个数大的最小值\",\"link\":\"#求比某个数大的最小值\",\"children\":[]},{\"level\":3,\"title\":\"例题：普通平衡树\",\"slug\":\"例题-普通平衡树\",\"link\":\"#例题-普通平衡树\",\"children\":[]}]}],\"readingTime\":{\"minutes\":11.68,\"words\":3503},\"filePathRelative\":\"algorithm/数据结构/ping-hengshu.md\"}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
